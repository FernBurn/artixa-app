{"ast":null,"code":"import _classCallCheck from \"/Users/dafonyo/Desktop/artixa-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dafonyo/Desktop/artixa-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dafonyo/Desktop/artixa-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dafonyo/Desktop/artixa-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dafonyo/Desktop/artixa-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dafonyo/Desktop/artixa-app/src/components/SignInScreen.js\";\n// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport firebase from 'firebase';\nimport firebaseui from 'firebaseui';\nimport Fokusz from './Fokusz'; // Configure Firebase.\n\nvar config = {\n  apiKey: \"AIzaSyCv4aHJcd0K-oNE0OknDxBgr1qYhbIGCYM\",\n  authDomain: \"artixa-1fe69.firebaseapp.com\",\n  databaseURL: \"https://artixa-1fe69.firebaseio.com\",\n  projectId: \"artixa-1fe69\",\n  storageBucket: \"artixa-1fe69.appspot.com\",\n  messagingSenderId: \"624275369219\"\n};\nfirebase.initializeApp(config);\n\nvar SignInScreen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignInScreen, _React$Component);\n\n  // The component's Local state.\n  // Configure FirebaseUI.\n  function SignInScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignInScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignInScreen).call(this, props));\n    _this.state = {\n      isSignedIn: false // Local signed-in state.\n\n    };\n    _this.uiConfig = {\n      // Popup signin flow rather than redirect flow.\n      signInFlow: 'popup',\n      // We will display Google and Facebook as auth providers.\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      'credentialHelper': firebaseui.auth.CredentialHelper.NONE,\n      callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: function signInSuccessWithAuthResult() {\n          return false;\n        }\n      }\n    };\n    _this.addId = React.createRef();\n    return _this;\n  } // Listen to the Firebase Auth state and set the local state.\n\n\n  _createClass(SignInScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n        return _this2.setState({\n          isSignedIn: !!user\n        });\n      });\n    } // Make sure we un-register Firebase observers when the component unmounts.\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unregisterAuthObserver();\n    }\n  }, {\n    key: \"checkEmail\",\n    value: function checkEmail() {\n      if (firebase.auth().currentUser.email == 'gabor@artixa.hu') {\n        this.refs.App;\n      } else {\n        firebase.auth().signOut();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isSignedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"My App\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Please sign-in:\"), React.createElement(StyledFirebaseAuth, {\n          uiConfig: this.uiConfig,\n          firebaseAuth: firebase.auth(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      }\n\n      return this.checkEmail(), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Welcome \", firebase.auth().currentUser.email, \"! You are now signed-in!\"), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Sign-out\"), React.createElement(\"div\", {\n        ref: this.appId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Fokusz, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SignInScreen;\n}(React.Component);\n\nexport default SignInScreen;","map":{"version":3,"sources":["/Users/dafonyo/Desktop/artixa-app/src/components/SignInScreen.js"],"names":["React","StyledFirebaseAuth","BrowserRouter","Router","Route","firebase","firebaseui","Fokusz","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","SignInScreen","props","state","isSignedIn","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","CredentialHelper","NONE","callbacks","signInSuccessWithAuthResult","addId","createRef","unregisterAuthObserver","onAuthStateChanged","user","setState","currentUser","email","refs","App","signOut","checkEmail","appId","Component"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,IAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE;AANR,CAAf;AAQAT,QAAQ,CAACU,aAAT,CAAuBP,MAAvB;;IAEMQ,Y;;;;;AAEJ;AAKA;AAeA,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AADiB,UAnBnBC,KAmBmB,GAnBX;AACNC,MAAAA,UAAU,EAAE,KADN,CACY;;AADZ,KAmBW;AAAA,UAdnBC,QAcmB,GAdR;AACT;AACAC,MAAAA,UAAU,EAAE,OAFH;AAGT;AACAC,MAAAA,aAAa,EAAE,CACbjB,QAAQ,CAACkB,IAAT,CAAcC,iBAAd,CAAgCC,WADnB,CAJN;AAOT,0BAAoBnB,UAAU,CAACiB,IAAX,CAAgBG,gBAAhB,CAAiCC,IAP5C;AAQTC,MAAAA,SAAS,EAAE;AACT;AACAC,QAAAA,2BAA2B,EAAE;AAAA,iBAAM,KAAN;AAAA;AAFpB;AARF,KAcQ;AAEjB,UAAKC,KAAL,GAAa9B,KAAK,CAAC+B,SAAN,EAAb;AAFiB;AAGlB,G,CAED;;;;;wCACoB;AAAA;;AAClB,WAAKC,sBAAL,GAA8B3B,QAAQ,CAACkB,IAAT,GAAgBU,kBAAhB,CAC1B,UAACC,IAAD;AAAA,eAAU,MAAI,CAACC,QAAL,CAAc;AAAChB,UAAAA,UAAU,EAAE,CAAC,CAACe;AAAf,SAAd,CAAV;AAAA,OAD0B,CAA9B;AAGD,K,CAED;;;;2CACuB;AACrB,WAAKF,sBAAL;AACD;;;iCAEW;AACV,UAAI3B,QAAQ,CAACkB,IAAT,GAAgBa,WAAhB,CAA4BC,KAA5B,IAAqC,iBAAzC,EAA2D;AACzD,aAAKC,IAAL,CAAUC,GAAV;AACD,OAFD,MAGK;AACHlC,QAAAA,QAAQ,CAACkB,IAAT,GAAgBiB,OAAhB;AACD;AACF;;;6BAEQ;AACP,UAAI,CAAC,KAAKtB,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAGE,oBAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAE,KAAKC,QAAnC;AAA6C,UAAA,YAAY,EAAEf,QAAQ,CAACkB,IAAT,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADF;AAOD;;AACD,aACE,KAAKkB,UAAL,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYpC,QAAQ,CAACkB,IAAT,GAAgBa,WAAhB,CAA4BC,KAAxC,6BADF,EAEE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAMhC,QAAQ,CAACkB,IAAT,GAAgBiB,OAAhB,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAK,QAAA,GAAG,EAAE,KAAKE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,CAFF;AAUD;;;;EApEwB1C,KAAK,CAAC2C,S;;AAsEjC,eAAe3B,YAAf","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport firebase from 'firebase';\nimport firebaseui from 'firebaseui';\nimport Fokusz from './Fokusz';\n\n// Configure Firebase.\nconst config = {\n    apiKey: \"AIzaSyCv4aHJcd0K-oNE0OknDxBgr1qYhbIGCYM\",\n    authDomain: \"artixa-1fe69.firebaseapp.com\",\n    databaseURL: \"https://artixa-1fe69.firebaseio.com\",\n    projectId: \"artixa-1fe69\",\n    storageBucket: \"artixa-1fe69.appspot.com\",\n    messagingSenderId: \"624275369219\"\n};\nfirebase.initializeApp(config);\n\nclass SignInScreen extends React.Component {\n\n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    'credentialHelper': firebaseui.auth.CredentialHelper.NONE,\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.addId = React.createRef();\n  }\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  checkEmail(){\n    if (firebase.auth().currentUser.email == 'gabor@artixa.hu'){\n      this.refs.App\n    }\n    else {\n      firebase.auth().signOut();\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <h1>My App</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>    \n        </div>\n      );\n    }\n    return (\n      this.checkEmail(),\n      <div>\n        <p>Welcome {firebase.auth().currentUser.email}! You are now signed-in!</p>\n        <a onClick={() => firebase.auth().signOut()}>Sign-out</a>\n        <div ref={this.appId}>\n          <Fokusz></Fokusz>\n        </div>\n      </div>\n    );\n  }\n}\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}